syntax = "proto3";
package fdl.economy.v1;


// Generic economy service.
service Economy {
    // Register in the service using identity service credentials
    rpc Register (RegisterRequest) returns (RegisterResponse);
    
    // Fetch economy state
    rpc GetEconomyState(GetEconomyStateRequest) returns (GetEconomyStateReply);
    
    // Fetch economy state by token
    rpc GetSelfEconomyState(GetSelfEconomyStateRequest) returns (GetSelfEconomyStateReply);
    
    // Perform money transaction
    rpc Pay (PayRequest) returns (PayReply);
    
    // Add money to user
    rpc Deposit (DepositRequest) returns (DepositReply);
    
    // Remove money from user
    rpc Withdraw (WithdrawRequest) returns (WithdrawReply);
}

// Economy state of the user
message EconomyState {
    int32 user_id = 1;
    int32 balance = 2;
}


message RegisterRequest {}

message RegisterResponse {}


message GetEconomyStateRequest {
    int32 user_id = 1;
}

message GetEconomyStateReply {
    EconomyState economy_state = 1;
}


message GetSelfEconomyStateRequest {}

message GetSelfEconomyStateReply {
    EconomyState economy_state = 1;
}


message PayRequest {
    int32 payee = 1;
    int32 amount = 2;
    string comment = 3;
}

message PayReply {}


message DepositRequest {
    int32 user_id = 1;
    int32 amount = 2;
}

message DepositReply {}


message WithdrawRequest {
    int32 user_id = 1;
    int32 amount = 2;
}

message WithdrawReply {}